AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  ALBName:
    Type: String
    Default: 'MyJenkinsALB'
  ALBSGName:
    Type: String
    Default: 'JenkisSG-HTTP'

Resources: 
  MyALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties: 
      Name: !Ref ALBName
      Scheme: 'internet-facing'
      SecurityGroups: 
        - !Ref MYALBSG
      Subnets: 
        - !ImportValue MYVPC-Public1-Subnet
        - !ImportValue MYVPC-Public2-Subnet
      Tags: 
        - Key: Env
          Value: POC
      Type: application 

  HTTPListner:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties: 
      DefaultActions: 
       - Type: "redirect"
         RedirectConfig:
           Protocol: "HTTPS"
           Port: 80
           StatusCode: "HTTP_301"
      LoadBalancerArn: !Ref MyALB
      Port: 80
      Protocol: "HTTP"

  # HTTPListnerRule:
  #   Type: AWS::ElasticLoadBalancingV2::ListenerRule
  #   Properties: 
  #     Actions: 
  #       - forward
  #     Conditions: 
  #       - RuleCondition
  #     ListenerArn: String
  #     Priority: Integer

  MYALBSG:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: 'Security Group for the ALB'
      GroupName: !Ref ALBSGName
      Tags: 
        - Key: Env
          Value: POC
      VpcId: !ImportValue MyVPCID

  HTTP:
    Type: AWS::EC2::SecurityGroupEgress
    Properties: 
      CidrIp: '0.0.0.0/0'
      CidrIpv6: '::/0'
      Description: 'Open to the World for HTTP'
      FromPort: 80
      GroupId: !Ref MYALBSG
      IpProtocol: tcp
      ToPort: 80

Outputs:
  MYALBEndpoint:
    Description: 'The URL for the MYALB'
    Value: !GetAtt MyALB.DNSName
    Export:
      Name: !Sub '${AWS::StackName}-Endpoint' 
  MYALBSG:
    Description: 'MyALB Security Group'
    Value: !Ref MYALBSG
    Export:
      Name: !Sub '${AWS::StackName}-SG' 
